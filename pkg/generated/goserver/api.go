// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Diary - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: ilya.korolev@outlook.com
 */

package goserver

import (
	"context"
	"net/http"
	"os"
)

// AssetsAPIRouter defines the required methods for binding the api requests to a responses for the AssetsAPI
// The AssetsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AssetsAPIServicer to perform the required actions, then write the service results to the http response.
type AssetsAPIRouter interface {
	GetAsset(http.ResponseWriter, *http.Request)
	UploadAsset(http.ResponseWriter, *http.Request)
}

// AuthAPIRouter defines the required methods for binding the api requests to a responses for the AuthAPI
// The AuthAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AuthAPIServicer to perform the required actions, then write the service results to the http response.
type AuthAPIRouter interface {
	Authorize(http.ResponseWriter, *http.Request)
}

// ItemsAPIRouter defines the required methods for binding the api requests to a responses for the ItemsAPI
// The ItemsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ItemsAPIServicer to perform the required actions, then write the service results to the http response.
type ItemsAPIRouter interface {
	GetItems(http.ResponseWriter, *http.Request)
	PutItems(http.ResponseWriter, *http.Request)
}

// UserAPIRouter defines the required methods for binding the api requests to a responses for the UserAPI
// The UserAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UserAPIServicer to perform the required actions, then write the service results to the http response.
type UserAPIRouter interface {
	GetUser(http.ResponseWriter, *http.Request)
}

// AssetsAPIServicer defines the api actions for the AssetsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AssetsAPIServicer interface {
	GetAsset(context.Context, string) (ImplResponse, error)
	UploadAsset(context.Context, *os.File) (ImplResponse, error)
}

// AuthAPIServicer defines the api actions for the AuthAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AuthAPIServicer interface {
	Authorize(context.Context, AuthData) (ImplResponse, error)
}

// ItemsAPIServicer defines the api actions for the ItemsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ItemsAPIServicer interface {
	GetItems(context.Context, string, string, string) (ImplResponse, error)
	PutItems(context.Context, ItemsRequest) (ImplResponse, error)
}

// UserAPIServicer defines the api actions for the UserAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UserAPIServicer interface {
	GetUser(context.Context) (ImplResponse, error)
}
