// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Diary - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: ilya.korolev@outlook.com
 */

package goserver

import (
	"time"
)

type SyncChangeResponse struct {

	// Unique change ID
	Id int32 `json:"id"`

	// User ID who made the change
	UserId string `json:"userId"`

	// Date of the diary entry that was changed
	Date string `json:"date"`

	// Type of operation performed
	OperationType string `json:"operationType"`

	// When the change occurred
	Timestamp time.Time `json:"timestamp"`

	// Current state of the item (null for deleted items)
	ItemSnapshot *ItemsResponse `json:"itemSnapshot,omitempty"`

	// Additional metadata about the change
	Metadata []string `json:"metadata,omitempty"`
}

type SyncChangeResponseInterface interface {
	GetId() int32
	GetUserId() string
	GetDate() string
	GetOperationType() string
	GetTimestamp() time.Time
	GetItemSnapshot() *ItemsResponse
	GetMetadata() []string
}

func (c *SyncChangeResponse) GetId() int32 {
	return c.Id
}
func (c *SyncChangeResponse) GetUserId() string {
	return c.UserId
}
func (c *SyncChangeResponse) GetDate() string {
	return c.Date
}
func (c *SyncChangeResponse) GetOperationType() string {
	return c.OperationType
}
func (c *SyncChangeResponse) GetTimestamp() time.Time {
	return c.Timestamp
}
func (c *SyncChangeResponse) GetItemSnapshot() *ItemsResponse {
	return c.ItemSnapshot
}
func (c *SyncChangeResponse) GetMetadata() []string {
	return c.Metadata
}

// AssertSyncChangeResponseRequired checks if the required fields are not zero-ed
func AssertSyncChangeResponseRequired(obj SyncChangeResponse) error {
	elements := map[string]interface{}{
		"id":            obj.Id,
		"userId":        obj.UserId,
		"date":          obj.Date,
		"operationType": obj.OperationType,
		"timestamp":     obj.Timestamp,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if obj.ItemSnapshot != nil {
		if err := AssertItemsResponseRequired(*obj.ItemSnapshot); err != nil {
			return err
		}
	}
	return nil
}

// AssertSyncChangeResponseConstraints checks if the values respects the defined constraints
func AssertSyncChangeResponseConstraints(obj SyncChangeResponse) error {
	if obj.ItemSnapshot != nil {
		if err := AssertItemsResponseConstraints(*obj.ItemSnapshot); err != nil {
			return err
		}
	}
	return nil
}
