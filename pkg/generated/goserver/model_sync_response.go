// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Diary - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Contact: ilya.korolev@outlook.com
 */

package goserver

type SyncResponse struct {

	// List of changes since the requested ID
	Changes []SyncChangeResponse `json:"changes"`

	// Whether there are more changes available
	HasMore bool `json:"hasMore"`

	// ID to use for the next sync request (if hasMore is true)
	NextId int32 `json:"nextId,omitempty"`
}

type SyncResponseInterface interface {
	GetChanges() []SyncChangeResponse
	GetHasMore() bool
	GetNextId() int32
}

func (c *SyncResponse) GetChanges() []SyncChangeResponse {
	return c.Changes
}
func (c *SyncResponse) GetHasMore() bool {
	return c.HasMore
}
func (c *SyncResponse) GetNextId() int32 {
	return c.NextId
}

// AssertSyncResponseRequired checks if the required fields are not zero-ed
func AssertSyncResponseRequired(obj SyncResponse) error {
	elements := map[string]interface{}{
		"changes": obj.Changes,
		"hasMore": obj.HasMore,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Changes {
		if err := AssertSyncChangeResponseRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertSyncResponseConstraints checks if the values respects the defined constraints
func AssertSyncResponseConstraints(obj SyncResponse) error {
	for _, el := range obj.Changes {
		if err := AssertSyncChangeResponseConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
